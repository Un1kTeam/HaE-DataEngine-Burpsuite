// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: network.proto
// Protobuf Java Version: 4.28.3

package burp.Proto;

public final class Network {
  private Network() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      Network.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface NetworkDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NetworkData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes rawData = 1;</code>
     * @return The rawData.
     */
    com.google.protobuf.ByteString getRawData();

    /**
     * <code>bool isChunked = 2;</code>
     * @return The isChunked.
     */
    boolean getIsChunked();

    /**
     * <code>int32 chunkNum = 3;</code>
     * @return The chunkNum.
     */
    int getChunkNum();

    /**
     * <code>string traceID = 4;</code>
     * @return The traceID.
     */
    java.lang.String getTraceID();
    /**
     * <code>string traceID = 4;</code>
     * @return The bytes for traceID.
     */
    com.google.protobuf.ByteString
        getTraceIDBytes();

    /**
     * <code>string serviceHost = 5;</code>
     * @return The serviceHost.
     */
    java.lang.String getServiceHost();
    /**
     * <code>string serviceHost = 5;</code>
     * @return The bytes for serviceHost.
     */
    com.google.protobuf.ByteString
        getServiceHostBytes();

    /**
     * <code>int32 servicePort = 6;</code>
     * @return The servicePort.
     */
    int getServicePort();
  }
  /**
   * Protobuf type {@code NetworkData}
   */
  public static final class NetworkData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:NetworkData)
      NetworkDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        NetworkData.class.getName());
    }
    // Use NetworkData.newBuilder() to construct.
    private NetworkData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkData() {
      rawData_ = com.google.protobuf.ByteString.EMPTY;
      traceID_ = "";
      serviceHost_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return burp.Proto.Network.internal_static_NetworkData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return burp.Proto.Network.internal_static_NetworkData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              burp.Proto.Network.NetworkData.class, burp.Proto.Network.NetworkData.Builder.class);
    }

    public static final int RAWDATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString rawData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes rawData = 1;</code>
     * @return The rawData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRawData() {
      return rawData_;
    }

    public static final int ISCHUNKED_FIELD_NUMBER = 2;
    private boolean isChunked_ = false;
    /**
     * <code>bool isChunked = 2;</code>
     * @return The isChunked.
     */
    @java.lang.Override
    public boolean getIsChunked() {
      return isChunked_;
    }

    public static final int CHUNKNUM_FIELD_NUMBER = 3;
    private int chunkNum_ = 0;
    /**
     * <code>int32 chunkNum = 3;</code>
     * @return The chunkNum.
     */
    @java.lang.Override
    public int getChunkNum() {
      return chunkNum_;
    }

    public static final int TRACEID_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object traceID_ = "";
    /**
     * <code>string traceID = 4;</code>
     * @return The traceID.
     */
    @java.lang.Override
    public java.lang.String getTraceID() {
      java.lang.Object ref = traceID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceID_ = s;
        return s;
      }
    }
    /**
     * <code>string traceID = 4;</code>
     * @return The bytes for traceID.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTraceIDBytes() {
      java.lang.Object ref = traceID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICEHOST_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object serviceHost_ = "";
    /**
     * <code>string serviceHost = 5;</code>
     * @return The serviceHost.
     */
    @java.lang.Override
    public java.lang.String getServiceHost() {
      java.lang.Object ref = serviceHost_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceHost_ = s;
        return s;
      }
    }
    /**
     * <code>string serviceHost = 5;</code>
     * @return The bytes for serviceHost.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceHostBytes() {
      java.lang.Object ref = serviceHost_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICEPORT_FIELD_NUMBER = 6;
    private int servicePort_ = 0;
    /**
     * <code>int32 servicePort = 6;</code>
     * @return The servicePort.
     */
    @java.lang.Override
    public int getServicePort() {
      return servicePort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!rawData_.isEmpty()) {
        output.writeBytes(1, rawData_);
      }
      if (isChunked_ != false) {
        output.writeBool(2, isChunked_);
      }
      if (chunkNum_ != 0) {
        output.writeInt32(3, chunkNum_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(traceID_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, traceID_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(serviceHost_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, serviceHost_);
      }
      if (servicePort_ != 0) {
        output.writeInt32(6, servicePort_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!rawData_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, rawData_);
      }
      if (isChunked_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isChunked_);
      }
      if (chunkNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, chunkNum_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(traceID_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, traceID_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(serviceHost_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, serviceHost_);
      }
      if (servicePort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, servicePort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof burp.Proto.Network.NetworkData)) {
        return super.equals(obj);
      }
      burp.Proto.Network.NetworkData other = (burp.Proto.Network.NetworkData) obj;

      if (!getRawData()
          .equals(other.getRawData())) return false;
      if (getIsChunked()
          != other.getIsChunked()) return false;
      if (getChunkNum()
          != other.getChunkNum()) return false;
      if (!getTraceID()
          .equals(other.getTraceID())) return false;
      if (!getServiceHost()
          .equals(other.getServiceHost())) return false;
      if (getServicePort()
          != other.getServicePort()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RAWDATA_FIELD_NUMBER;
      hash = (53 * hash) + getRawData().hashCode();
      hash = (37 * hash) + ISCHUNKED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsChunked());
      hash = (37 * hash) + CHUNKNUM_FIELD_NUMBER;
      hash = (53 * hash) + getChunkNum();
      hash = (37 * hash) + TRACEID_FIELD_NUMBER;
      hash = (53 * hash) + getTraceID().hashCode();
      hash = (37 * hash) + SERVICEHOST_FIELD_NUMBER;
      hash = (53 * hash) + getServiceHost().hashCode();
      hash = (37 * hash) + SERVICEPORT_FIELD_NUMBER;
      hash = (53 * hash) + getServicePort();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static burp.Proto.Network.NetworkData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static burp.Proto.Network.NetworkData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static burp.Proto.Network.NetworkData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static burp.Proto.Network.NetworkData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static burp.Proto.Network.NetworkData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static burp.Proto.Network.NetworkData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static burp.Proto.Network.NetworkData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static burp.Proto.Network.NetworkData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static burp.Proto.Network.NetworkData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static burp.Proto.Network.NetworkData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static burp.Proto.Network.NetworkData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static burp.Proto.Network.NetworkData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(burp.Proto.Network.NetworkData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NetworkData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NetworkData)
        burp.Proto.Network.NetworkDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return burp.Proto.Network.internal_static_NetworkData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return burp.Proto.Network.internal_static_NetworkData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                burp.Proto.Network.NetworkData.class, burp.Proto.Network.NetworkData.Builder.class);
      }

      // Construct using burp.Proto.Network.NetworkData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        rawData_ = com.google.protobuf.ByteString.EMPTY;
        isChunked_ = false;
        chunkNum_ = 0;
        traceID_ = "";
        serviceHost_ = "";
        servicePort_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return burp.Proto.Network.internal_static_NetworkData_descriptor;
      }

      @java.lang.Override
      public burp.Proto.Network.NetworkData getDefaultInstanceForType() {
        return burp.Proto.Network.NetworkData.getDefaultInstance();
      }

      @java.lang.Override
      public burp.Proto.Network.NetworkData build() {
        burp.Proto.Network.NetworkData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public burp.Proto.Network.NetworkData buildPartial() {
        burp.Proto.Network.NetworkData result = new burp.Proto.Network.NetworkData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(burp.Proto.Network.NetworkData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.rawData_ = rawData_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.isChunked_ = isChunked_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.chunkNum_ = chunkNum_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.traceID_ = traceID_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.serviceHost_ = serviceHost_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.servicePort_ = servicePort_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof burp.Proto.Network.NetworkData) {
          return mergeFrom((burp.Proto.Network.NetworkData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(burp.Proto.Network.NetworkData other) {
        if (other == burp.Proto.Network.NetworkData.getDefaultInstance()) return this;
        if (other.getRawData() != com.google.protobuf.ByteString.EMPTY) {
          setRawData(other.getRawData());
        }
        if (other.getIsChunked() != false) {
          setIsChunked(other.getIsChunked());
        }
        if (other.getChunkNum() != 0) {
          setChunkNum(other.getChunkNum());
        }
        if (!other.getTraceID().isEmpty()) {
          traceID_ = other.traceID_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getServiceHost().isEmpty()) {
          serviceHost_ = other.serviceHost_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.getServicePort() != 0) {
          setServicePort(other.getServicePort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                rawData_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                isChunked_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                chunkNum_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                traceID_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                serviceHost_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                servicePort_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString rawData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes rawData = 1;</code>
       * @return The rawData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRawData() {
        return rawData_;
      }
      /**
       * <code>bytes rawData = 1;</code>
       * @param value The rawData to set.
       * @return This builder for chaining.
       */
      public Builder setRawData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        rawData_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bytes rawData = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rawData_ = getDefaultInstance().getRawData();
        onChanged();
        return this;
      }

      private boolean isChunked_ ;
      /**
       * <code>bool isChunked = 2;</code>
       * @return The isChunked.
       */
      @java.lang.Override
      public boolean getIsChunked() {
        return isChunked_;
      }
      /**
       * <code>bool isChunked = 2;</code>
       * @param value The isChunked to set.
       * @return This builder for chaining.
       */
      public Builder setIsChunked(boolean value) {

        isChunked_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool isChunked = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsChunked() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isChunked_ = false;
        onChanged();
        return this;
      }

      private int chunkNum_ ;
      /**
       * <code>int32 chunkNum = 3;</code>
       * @return The chunkNum.
       */
      @java.lang.Override
      public int getChunkNum() {
        return chunkNum_;
      }
      /**
       * <code>int32 chunkNum = 3;</code>
       * @param value The chunkNum to set.
       * @return This builder for chaining.
       */
      public Builder setChunkNum(int value) {

        chunkNum_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 chunkNum = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChunkNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkNum_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object traceID_ = "";
      /**
       * <code>string traceID = 4;</code>
       * @return The traceID.
       */
      public java.lang.String getTraceID() {
        java.lang.Object ref = traceID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          traceID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string traceID = 4;</code>
       * @return The bytes for traceID.
       */
      public com.google.protobuf.ByteString
          getTraceIDBytes() {
        java.lang.Object ref = traceID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          traceID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string traceID = 4;</code>
       * @param value The traceID to set.
       * @return This builder for chaining.
       */
      public Builder setTraceID(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        traceID_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>string traceID = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraceID() {
        traceID_ = getDefaultInstance().getTraceID();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>string traceID = 4;</code>
       * @param value The bytes for traceID to set.
       * @return This builder for chaining.
       */
      public Builder setTraceIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        traceID_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object serviceHost_ = "";
      /**
       * <code>string serviceHost = 5;</code>
       * @return The serviceHost.
       */
      public java.lang.String getServiceHost() {
        java.lang.Object ref = serviceHost_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceHost_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string serviceHost = 5;</code>
       * @return The bytes for serviceHost.
       */
      public com.google.protobuf.ByteString
          getServiceHostBytes() {
        java.lang.Object ref = serviceHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serviceHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string serviceHost = 5;</code>
       * @param value The serviceHost to set.
       * @return This builder for chaining.
       */
      public Builder setServiceHost(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        serviceHost_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>string serviceHost = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceHost() {
        serviceHost_ = getDefaultInstance().getServiceHost();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>string serviceHost = 5;</code>
       * @param value The bytes for serviceHost to set.
       * @return This builder for chaining.
       */
      public Builder setServiceHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        serviceHost_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private int servicePort_ ;
      /**
       * <code>int32 servicePort = 6;</code>
       * @return The servicePort.
       */
      @java.lang.Override
      public int getServicePort() {
        return servicePort_;
      }
      /**
       * <code>int32 servicePort = 6;</code>
       * @param value The servicePort to set.
       * @return This builder for chaining.
       */
      public Builder setServicePort(int value) {

        servicePort_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 servicePort = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearServicePort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        servicePort_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NetworkData)
    }

    // @@protoc_insertion_point(class_scope:NetworkData)
    private static final burp.Proto.Network.NetworkData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new burp.Proto.Network.NetworkData();
    }

    public static burp.Proto.Network.NetworkData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkData>
        PARSER = new com.google.protobuf.AbstractParser<NetworkData>() {
      @java.lang.Override
      public NetworkData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public burp.Proto.Network.NetworkData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NetworkData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_NetworkData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rnetwork.proto\"~\n\013NetworkData\022\017\n\007rawDat" +
      "a\030\001 \001(\014\022\021\n\tisChunked\030\002 \001(\010\022\020\n\010chunkNum\030\003" +
      " \001(\005\022\017\n\007traceID\030\004 \001(\t\022\023\n\013serviceHost\030\005 \001" +
      "(\t\022\023\n\013servicePort\030\006 \001(\005B\014\n\nburp.Protob\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_NetworkData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_NetworkData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_NetworkData_descriptor,
        new java.lang.String[] { "RawData", "IsChunked", "ChunkNum", "TraceID", "ServiceHost", "ServicePort", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
